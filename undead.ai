//==================================================================================================
//  Undead Melee Strategic AI
//==================================================================================================
globals
    boolean b_hero1_done        = false
    boolean b_hero2_done        = false
    boolean b_hero3_done        = false
    boolean b_sphinx_done       = false
    integer AG                  = 0
    integer WG                  = 4
    integer c_abom              = 0
    integer c_abom_done         = 0
    integer c_acolyte           = 0
    integer c_acolyte_done      = 0
    integer c_altar_done        = 0
    integer c_banshee           = 0
    integer c_banshee_done      = 0
    integer c_boneyard_done     = 0
    integer c_citadel           = 0
    integer c_citadel_done      = 0
    integer c_crypt_done        = 0
    integer c_fiend             = 0
    integer c_fiend_done        = 0
    integer c_food_made         = 0
    integer c_food_used         = 0
    integer c_garg              = 0
    integer c_garg_done         = 0
    integer c_ghoul             = 0
    integer c_ghoul_done        = 0
    integer c_gold              = 0
    integer c_grave_done        = 0
    integer c_halls             = 0
    integer c_halls_done        = 0
    integer c_hero1             = 0
    integer c_hero1_done        = 0
    integer c_hero2             = 0
    integer c_hero2_done        = 0
    integer c_hero3             = 0
    integer c_hero3_done        = 0
    integer c_mines             = 0
    integer c_mines_done        = 0
    integer c_neclis            = 0
    integer c_neclis_done       = 0
    integer c_necro             = 0
    integer c_necro_done        = 0
    integer c_pit_done          = 0
    integer c_slaughter_done    = 0
    integer c_sphinx_done       = 0
    integer c_statue            = 0
    integer c_statue_done       = 0
    integer c_temple_done       = 0
    integer c_tomb_done         = 0
    integer c_undead_mines      = 0
    integer c_wagon             = 0
    integer c_wagon_done        = 0
    integer c_web_fiend_done    = 0
    integer c_wood              = 0
    integer c_wyrm              = 0
    integer c_wyrm_done         = 0
    integer c_zep               = 0
    integer c_zig               = 0
    integer c_zig_done          = 0
    integer level               = 0
    integer rnd                 = 0
    integer towers_cd           = 0
endglobals

//--------------------------------------------------------------------------------------------------
//  set_skills
//--------------------------------------------------------------------------------------------------
function set_skills takes nothing returns nothing

    set skill[ 1] = FROST_NOVA
    set skill[ 2] = FROST_ARMOR
    set skill[ 3] = FROST_NOVA
    set skill[ 4] = DARK_RITUAL
    set skill[ 5] = FROST_NOVA
    set skill[ 6] = DEATH_DECAY
    set skill[ 7] = FROST_ARMOR
    set skill[ 8] = DARK_RITUAL
    set skill[ 9] = FROST_ARMOR
    set skill[10] = DARK_RITUAL

    call SetSkillArray(1,LICH)
    call SetSkillArray(2,LICH)
    call SetSkillArray(3,LICH)

    set skill[ 1] = SLEEP
    set skill[ 2] = VAMP_AURA
    set skill[ 3] = SLEEP
    set skill[ 4] = CARRION_SWARM
    set skill[ 5] = SLEEP
    set skill[ 6] = INFERNO
    set skill[ 7] = CARRION_SWARM
    set skill[ 8] = VAMP_AURA
    set skill[ 9] = CARRION_SWARM
    set skill[10] = VAMP_AURA

    call SetSkillArray(1,DREAD_LORD)

    set skill[ 1] = CARRION_SWARM
    set skill[ 2] = SLEEP
    set skill[ 3] = CARRION_SWARM
    set skill[ 4] = VAMP_AURA
    set skill[ 5] = CARRION_SWARM
    set skill[ 6] = INFERNO
    set skill[ 7] = VAMP_AURA
    set skill[ 8] = VAMP_AURA
    set skill[ 9] = SLEEP
    set skill[10] = SLEEP

    call SetSkillArray(2,DREAD_LORD)
    call SetSkillArray(3,DREAD_LORD)

    set skill[ 1] = DEATH_COIL
    set skill[ 2] = UNHOLY_AURA
    set skill[ 3] = DEATH_COIL
    set skill[ 4] = UNHOLY_AURA
    set skill[ 5] = DEATH_COIL
    set skill[ 6] = ANIM_DEAD
    set skill[ 7] = UNHOLY_AURA
    set skill[ 8] = DEATH_PACT
    set skill[ 9] = DEATH_PACT
    set skill[10] = DEATH_PACT

    call SetSkillArray(1,DEATH_KNIGHT)
    call SetSkillArray(2,DEATH_KNIGHT)
    call SetSkillArray(3,DEATH_KNIGHT)

    set skill[ 1] = CARRION_SCARAB
    set skill[ 2] = THORNY_SHIELD
    set skill[ 3] = CARRION_SCARAB
    set skill[ 4] = IMPALE
    set skill[ 5] = CARRION_SCARAB
    set skill[ 6] = LOCUST_SWARM
    set skill[ 7] = THORNY_SHIELD
    set skill[ 8] = IMPALE
    set skill[ 9] = THORNY_SHIELD
    set skill[10] = IMPALE

    call SetSkillArray(1,CRYPT_LORD)

    set skill[ 1] = IMPALE
    set skill[ 2] = THORNY_SHIELD
    set skill[ 3] = IMPALE
    set skill[ 4] = THORNY_SHIELD
    set skill[ 5] = IMPALE
    set skill[ 6] = LOCUST_SWARM
    set skill[ 7] = THORNY_SHIELD
    set skill[ 8] = CARRION_SCARAB
    set skill[ 9] = CARRION_SCARAB
    set skill[10] = CARRION_SCARAB

    call SetSkillArray(2,CRYPT_LORD)
    call SetSkillArray(3,CRYPT_LORD)
endfunction

//--------------------------------------------------------------------------------------------------
//  setup_force
//--------------------------------------------------------------------------------------------------
function setup_force takes nothing returns nothing
    call AwaitMeleeHeroes()
    call InitMeleeGroup()
    call SetAssaultGroup( AG,AG, GHOUL )
    call SetMeleeGroup( hero_id )
    call SetMeleeGroup( hero_id2 )
    call SetMeleeGroup( hero_id3 )
    call SetMeleeGroup( CRYPT_FIEND )
    call SetMeleeGroup( ABOMINATION )
    call SetMeleeGroup( NECRO )
    call SetMeleeGroup( BANSHEE )
    call SetMeleeGroup( GARGOYLE )
    call SetMeleeGroup( FROST_WYRM )
    call SetMeleeGroup( OBS_STATUE )
    call SetMeleeGroup( BLK_SPHINX )
    call SetInitialWave(10)
endfunction

//--------------------------------------------------------------------------------------------------
//  attack_sequence
//--------------------------------------------------------------------------------------------------
function attack_sequence takes nothing returns nothing
    loop
        exitwhen c_hero1_done > 0
        call Sleep(2)
    endloop
    call StaggerSleep(0,2)
    loop
        loop
            exitwhen not CaptainRetreating()
            call Sleep(2)
        endloop
        call setup_force()
        set max_creeps = level * 4 / 5
        set min_creeps = max_creeps - 10
        if min_creeps < 0 then
            set min_creeps = 0
        endif
        set allow_air_creeps = c_garg_done + c_wyrm_done + c_sphinx_done + c_web_fiend_done >= 5
        call SingleMeleeAttack(take_exp and level > 20,level > 30,false,c_garg_done > 0 or c_wyrm_done > 0 or c_sphinx_done > 0)
    endloop
endfunction

//--------------------------------------------------------------------------------------------------
//  init_vars
//--------------------------------------------------------------------------------------------------
function init_vars takes nothing returns nothing
    set b_hero1_done        = GetUnitCountDone(hero_id)  > 0
    set b_hero2_done        = GetUnitCountDone(hero_id2) > 0
    set b_hero3_done        = GetUnitCountDone(hero_id3) > 0
    set b_sphinx_done       = GetUpgradeLevel(UPG_BLK_SPHINX) > 0
    set c_abom              = GetUnitCount(ABOMINATION)
    set c_abom_done         = GetUnitCountDone(ABOMINATION)
    set c_acolyte           = GetUnitCount(ACOLYTE)
    set c_acolyte_done      = GetUnitCountDone(ACOLYTE)
    set c_altar_done        = GetUnitCountDone(UNDEAD_ALTAR)
    set c_banshee           = GetUnitCount(BANSHEE)
    set c_banshee_done      = GetUnitCountDone(BANSHEE)
    set c_boneyard_done     = GetUnitCountDone(BONEYARD)
    set c_citadel           = GetUnitCount(NECROPOLIS_3)
    set c_citadel_done      = GetUnitCountDone(NECROPOLIS_3)
    set c_crypt_done        = GetUnitCountDone(CRYPT)
    set c_fiend             = GetUnitCount(CRYPT_FIEND)
    set c_fiend_done        = GetUnitCountDone(CRYPT_FIEND)
    set c_food_made         = c_neclis * GetFoodMade(NECROPOLIS_1) + c_zig * GetFoodMade(ZIGGURAT_1)
    set c_food_used         = FoodUsed()
    set c_garg              = TownCount(GARGOYLE)
    set c_garg_done         = TownCountDone(GARGOYLE)
    set c_ghoul             = GetUnitCount(GHOUL)
    set c_ghoul_done        = GetUnitCountDone(GHOUL)
    set c_gold              = GetGold()
    set c_grave_done        = GetUnitCountDone(GRAVEYARD)
    set c_halls             = TownCount(NECROPOLIS_2)
    set c_halls_done        = TownCountDone(NECROPOLIS_2)
    set c_hero1             = GetUnitCount(hero_id)
    set c_hero1_done        = GetUnitCountDone(hero_id)
    set c_hero2             = GetUnitCount(hero_id2)
    set c_hero2_done        = GetUnitCountDone(hero_id2)
    set c_hero3             = GetUnitCount(hero_id3)
    set c_hero3_done        = GetUnitCountDone(hero_id3)
    set c_mines             = GetUnitCount(UNDEAD_MINE)
    set c_mines_done        = GetUnitCountDone(UNDEAD_MINE)
    set c_neclis            = TownCount(NECROPOLIS_1)
    set c_neclis_done       = TownCountDone(NECROPOLIS_1)
    set c_necro             = GetUnitCount(NECRO)
    set c_necro_done        = GetUnitCountDone(NECRO)
    set c_pit_done          = GetUnitCountDone(SAC_PIT)
    set c_slaughter_done    = GetUnitCountDone(SLAUGHTERHOUSE)
    set c_sphinx_done       = GetUnitCountDone(BLK_SPHINX)
    set c_statue            = GetUnitCount(OBS_STATUE)
    set c_statue_done       = GetUnitCountDone(OBS_STATUE)
    set c_temple_done       = GetUnitCountDone(DAMNED_TEMPLE)
    set c_tomb_done         = GetUnitCountDone(TOMB_OF_RELICS)
    set c_undead_mines      = GetUnitCount(UNDEAD_MINE)
    set c_wagon             = GetUnitCount(MEAT_WAGON)
    set c_wagon_done        = GetUnitCountDone(MEAT_WAGON)
    set c_wood              = GetWood()
    set c_wyrm              = GetUnitCount(FROST_WYRM)
    set c_wyrm_done         = GetUnitCountDone(FROST_WYRM)
    set c_zep               = GetUnitCount(ZEPPELIN)
    set c_zig               = TownCount(ZIGGURAT_1)
    set c_zig_done          = TownCountDone(ZIGGURAT_1)
    if GetUpgradeLevel(UPG_FIEND_WEB) > 0 then
        set c_web_fiend_done = c_fiend_done
    else
        set c_web_fiend_done = 0
    endif
endfunction

//--------------------------------------------------------------------------------------------------
//  set_vars
//--------------------------------------------------------------------------------------------------
function set_vars takes nothing returns nothing
    loop
        call init_vars()
        call Sleep(1)
    endloop
endfunction

//--------------------------------------------------------------------------------------------------
//  build_sequence
//--------------------------------------------------------------------------------------------------
function food_allowed takes integer qty returns boolean
    return ((c_mines_done > 1 and c_food_used+qty <= 100) or (c_mines_done < 2 and c_food_used+qty < 80)) and c_food_used+qty <= c_neclis_done * GetFoodMade(NECROPOLIS_1) + c_zig_done * GetFoodMade(ZIGGURAT_1)
endfunction
function build_sequence takes nothing returns nothing
    local integer towns = 1
    local integer worker
    call InitBuildArray()
    set rnd = rnd + 1
    if rnd > 3 then
        set rnd = 1
    endif
    set AG = c_ghoul_done - WG
    if AG < 1 then
        set AG = 0
    endif
    set level = 4*c_hero1_done + 5*(c_hero2_done + c_hero3_done) + 2*(c_wagon_done + AG + c_garg_done + c_statue_done + c_necro_done + c_banshee_done) + 3*c_fiend_done + 4*c_abom_done + 5*c_sphinx_done + 6*c_wyrm_done
    set towers_cd = towers_cd + 1
    if towers_cd > 10 then
        set towers_cd = 0
    endif
    set worker = c_mines_done * 5 + 1
    if worker < 1 then
        set worker = 1
    endif
    call BasicExpansion( c_mines < 1 and c_acolyte_done > 0, UNDEAD_MINE )
    if c_acolyte == c_acolyte_done and c_acolyte_done < worker and GetUnitCountDone(NECROPOLIS_1) + GetUnitCountDone(NECROPOLIS_2) + GetUnitCountDone(NECROPOLIS_3) > 0 and food_allowed(1) then
        call SetBuildUnit( c_acolyte_done+1, ACOLYTE )
    endif
    if c_crypt_done > 0 and c_ghoul_done < WG and c_ghoul == c_ghoul_done and c_garg == c_garg_done and c_fiend == c_fiend_done and food_allowed(2) then
        call SetBuildUnit( c_ghoul_done+1, GHOUL )
    endif
    if c_food_used + 5 >= c_food_made and c_food_made < 100 then
        call SetBuildUnit( c_zig_done+1, ZIGGURAT_1 )
    endif
    if c_neclis < 1 and c_acolyte_done > 0 then
        call SetBuildUnit( 1, NECROPOLIS_1 )
    endif
    if c_altar_done < 1 then
        call SetBuildUnit( 1, UNDEAD_ALTAR )
    elseif c_hero1 == c_hero1_done and c_hero2 == c_hero2_done and c_hero3 == c_hero3_done and food_allowed(5) then
        if b_hero1_done then
            if b_hero2_done then
                if b_hero3_done or c_citadel_done > 0 then
                    call SetBuildUnit( 1, hero_id3 )
                endif
            elseif c_halls_done > 0 then
                call SetBuildUnit( 1, hero_id2 )
            endif
        else
            call SetBuildUnit( 1, hero_id )
        endif
    endif
    if c_crypt_done < 1 then
        call SetBuildUnit( 1, CRYPT )
    elseif c_ghoul == c_ghoul_done and c_garg == c_garg_done and c_fiend == c_fiend_done then
        if (c_slaughter_done < 1 or c_citadel_done < 1) and (c_grave_done < 1 or rnd == 1) then
            if c_ghoul_done >= WG and GetUpgradeLevel(UPG_CANNIBALIZE) < 1 then
                call SetBuildUpgr( 1, UPG_CANNIBALIZE )
            elseif AG > 2 and c_citadel_done > 0 and c_grave_done > 0 and GetUpgradeLevel(UPG_GHOUL_FRENZY) < 1 then
                call SetBuildUpgr( 1, UPG_GHOUL_FRENZY )
            elseif c_ghoul_done < WG+8 and food_allowed(2) then
                call SetBuildUnit( c_ghoul_done+1, GHOUL )
            endif
        elseif c_grave_done > 0 then
            if c_halls_done > 0 and rnd == 2 then
                if c_garg_done > 0 and c_citadel_done > 0 and GetUpgradeLevel(UPG_STONE_FORM) < 1 then
                    call SetBuildUpgr( 1, UPG_STONE_FORM )
                elseif c_garg_done < 4 and food_allowed(2) then
                    call SetBuildUnit( c_garg_done+1, GARGOYLE )
                endif
            else
                if c_fiend_done > 0 and c_halls_done > 0 and (GetUpgradeLevel(UPG_FIEND_WEB) < 1 or GetUpgradeLevel(UPG_BURROWING) < 1) then
                    call SetBuildUpgr( 1, UPG_FIEND_WEB )
                    call SetBuildUpgr( 1, UPG_BURROWING )
                elseif c_fiend_done < 4 and food_allowed(3) then
                    call SetBuildUnit( c_fiend_done+1, CRYPT_FIEND )
                endif
            endif
        endif
    endif
    if c_tomb_done < 1 then
        call SetBuildUnit( 1, TOMB_OF_RELICS )
    endif
    if c_grave_done < 1 then
        call SetBuildUnit( 1, GRAVEYARD )
    endif
    if GetUnitCountDone(NECROPOLIS_1) > 0 and TownCount(NECROPOLIS_2) < 1 and worker <= c_acolyte_done then
        call SetBuildUnit( 1, NECROPOLIS_2 )
    endif
    call BasicExpansion( c_mines < 2, UNDEAD_MINE )
    if c_mines_done > 1 and c_gold > 300 then
        loop
            exitwhen towns > 3
            if GetTownUnitCount(UNDEAD_MINE,towns,true) > 0 and TownCountTown(NECROPOLIS_1,towns) < 1 then
                if TownCountTown(ZIGGURAT_1,towns) < 2 then
                    call SecondaryTown( towns, 2, ZIGGURAT_1 )
                elseif GetTownUnitCount(ZIGGURAT_1,towns,true) > 0 and GetTownUnitCount(ZIGGURAT_2,towns,false) < 2 and towers_cd == 10 then
                    set towers_cd = -26
                    call StartUnit(2,ZIGGURAT_2,towns)
                endif
            endif
            set towns = towns + 1
        endloop
    elseif c_mines < 1 and c_gold < 800 then
        return
    endif
    if c_gold > 300 and c_wood > 200 then
        call SetBuildUpgr( 1, UPG_UNHOLY_STR )
        call SetBuildUpgr( 1, UPG_UNHOLY_ARMOR )
        call SetBuildUpgr( 1, UPG_CR_ATTACK )
        call SetBuildUpgr( 1, UPG_CR_ARMOR )
        if c_halls_done > 0 then
            call SetBuildUpgr( 2, UPG_UNHOLY_STR )
            call SetBuildUpgr( 2, UPG_UNHOLY_ARMOR )
            call SetBuildUpgr( 2, UPG_CR_ATTACK )
            call SetBuildUpgr( 2, UPG_CR_ARMOR )
            if c_citadel_done > 0 and c_gold > 400 and c_wood > 300 then
                call SetBuildUpgr( 3, UPG_UNHOLY_STR )
                call SetBuildUpgr( 3, UPG_UNHOLY_ARMOR )
                call SetBuildUpgr( 3, UPG_CR_ATTACK )
                call SetBuildUpgr( 3, UPG_CR_ARMOR )
            endif
        endif
    endif
    if GetUnitCountDone(NECROPOLIS_2) > 0 and GetUnitCount(NECROPOLIS_3) < 1 and worker <= c_acolyte_done and c_garg + c_necro + c_banshee + c_abom + c_statue > 5 and level > 30 then
        call SetBuildUnit( 1, NECROPOLIS_3 )
    endif
    if c_temple_done < 1 then
        call SetBuildUnit( 1, DAMNED_TEMPLE )
    elseif c_necro == c_necro_done and c_banshee == c_banshee_done then
        if rnd == 1 then
            if c_necro_done > 0 and (GetUpgradeLevel(UPG_NECROS) < 1 or GetUpgradeLevel(UPG_SKEL_LIFE) < 1) then
                call SetBuildUpgr( 1, UPG_NECROS )
                call SetBuildUpgr( 1, UPG_SKEL_LIFE )
            elseif c_necro_done > 0 and c_citadel_done > 0 and (GetUpgradeLevel(UPG_NECROS) < 2 or GetUpgradeLevel(UPG_SKEL_MASTERY) < 2) then
                call SetBuildUpgr( 2, UPG_NECROS )
                call SetBuildUpgr( 2, UPG_SKEL_MASTERY )
            elseif c_necro_done < 4 and food_allowed(2) then
                call SetBuildUnit( c_necro_done+1, NECRO )
            endif
        else
            if c_banshee_done > 0 and GetUpgradeLevel(UPG_BANSHEE) < 1 then
                call SetBuildUpgr( 1, UPG_BANSHEE )
            elseif c_banshee_done > 0 and c_citadel_done > 0 and GetUpgradeLevel(UPG_BANSHEE) < 2 then
                call SetBuildUpgr( 2, UPG_BANSHEE )
            elseif c_banshee_done < 3 and food_allowed(2) then
                call SetBuildUnit( c_banshee_done+1, BANSHEE )
            endif
        endif
    endif
    if b_sphinx_done and c_statue_done > 0 and c_sphinx_done < 1 and c_tomb_done > 0 and food_allowed(2) then
        call ConvertUnits(c_sphinx_done+1,OBS_STATUE)
    endif
    if c_slaughter_done < 1 then
        call SetBuildUnit( 1, SLAUGHTERHOUSE )
    elseif c_abom == c_abom_done and c_statue == c_statue_done then
        if c_citadel_done > 0 and rnd == 1 then
            if c_abom_done > 0 and GetUpgradeLevel(UPG_PLAGUE) < 1 then
                call SetBuildUpgr( 1, UPG_PLAGUE )
            elseif c_abom_done < 4 and food_allowed(4) then
                call SetBuildUnit( c_abom_done+1, ABOMINATION )
            endif
        elseif c_tomb_done > 0 then
            if c_statue_done > 0 and c_citadel_done > 0 and GetUpgradeLevel(UPG_BLK_SPHINX) < 1 then
                call SetBuildUpgr( 1, UPG_BLK_SPHINX )
            elseif c_statue_done < 2 and food_allowed(3) then
                call SetBuildUnit( c_statue_done+1, OBS_STATUE )
            endif
        endif
    endif
    if c_boneyard_done < 1 then
        if c_pit_done < 1 then
            if c_halls_done > 0 then
                call SetBuildUnit( 1, SAC_PIT )
            endif
        elseif c_citadel_done > 0 then
            call SetBuildUnit( 1, BONEYARD )
        endif
    elseif c_wyrm == c_wyrm_done then
        if c_wyrm_done > 0 and GetUpgradeLevel(UPG_WYRM_BREATH) < 1 then
            call SetBuildUpgr( 1, UPG_WYRM_BREATH )
        elseif c_wyrm_done < 2 and food_allowed(7) then
            call SetBuildUnit( c_wyrm_done+1, FROST_WYRM )
        endif
    endif
    if c_zep < 1 then
        call GetZeppelin()
    endif
endfunction

//--------------------------------------------------------------------------------------------------
//  peon_asignment
//--------------------------------------------------------------------------------------------------
function peon_assignment takes nothing returns nothing
    local integer townid = 0
    call build_sequence()
    call Sleep(1.5)
    loop
        call ClearHarvestAI()
        loop
            exitwhen townid > 3
            if TownHasMine(townid) and GetTownUnitCount(UNDEAD_MINE,townid,true) > 0 then
                call HarvestGold(townid,5)
            endif
            set townid = townid + 1
        endloop
        set townid = 0
        call HarvestWood(0,WG)
        call build_sequence()
        call Sleep(1)
    endloop
endfunction

//--------------------------------------------------------------------------------------------------
//    main
//--------------------------------------------------------------------------------------------------
function main takes nothing returns nothing
    call PickMeleeHero(RACE_UNDEAD)
    call set_skills()
    call StandardAI(function SkillArrays, function peon_assignment, function attack_sequence)
    call StartThread(function set_vars)
    call PlayGame()
endfunction
