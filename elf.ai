//==================================================================================================
//  $Id: elf.ai,v 1.18 2003/04/23 19:26:00 bfitch Exp $
//==================================================================================================
globals
    boolean b_hero1_done        = false
    boolean b_hero2_done        = false
    boolean b_hero3_done        = false
    boolean b_rider_done        = false
    integer c_altar_done        = 0
    integer c_archer            = 0
    integer c_archer_done       = 0
    integer c_ballista          = 0
    integer c_ballista_done     = 0
    integer c_bear              = 0
    integer c_bear_done         = 0
    integer c_chimaera          = 0
    integer c_chimaera_done     = 0
    integer c_dragon            = 0
    integer c_dragon_done       = 0
    integer c_dryad             = 0
    integer c_dryad_done        = 0
    integer c_food_made         = 0
    integer c_food_used         = 0
    integer c_gold              = 0
    integer c_hero1             = 0
    integer c_hero1_done        = 0
    integer c_hero2             = 0
    integer c_hero2_done        = 0
    integer c_hero3             = 0
    integer c_hero3_done        = 0
    integer c_hippo             = 0
    integer c_hippo_done        = 0
    integer c_hippo_rider_done  = 0
    integer c_hunt_hall_done    = 0
    integer c_huntress          = 0
    integer c_huntress_done     = 0
    integer c_lore_done         = 0
    integer c_mines             = 0
    integer c_mines_done        = 0
    integer c_moon_well         = 0
    integer c_moon_well_done    = 0
    integer c_mtn_giant         = 0
    integer c_mtn_giant_done    = 0
    integer c_roost_done        = 0
    integer c_talon             = 0
    integer c_talon_done        = 0
    integer c_tree_ages         = 0
    integer c_tree_ages_done    = 0
    integer c_tree_etern        = 0
    integer c_tree_etern_done   = 0
    integer c_tree_life         = 0
    integer c_tree_life_done    = 0
    integer c_war_done          = 0
    integer c_wind_done         = 0
    integer c_wisp              = 0
    integer c_wisp_done         = 0
    integer c_wonders_done      = 0
    integer c_wood              = 0
    integer c_zeps              = 0
    integer level               = 0
    integer rnd                 = 0
endglobals

//--------------------------------------------------------------------------------------------------
//  set_skills
//--------------------------------------------------------------------------------------------------
function set_skills takes nothing returns nothing

    set skill[ 1] = SEARING_ARROWS
    set skill[ 2] = TRUESHOT
    set skill[ 3] = SEARING_ARROWS
    set skill[ 4] = TRUESHOT
    set skill[ 5] = SEARING_ARROWS
    set skill[ 6] = STARFALL
    set skill[ 7] = TRUESHOT
    set skill[ 8] = SCOUT
    set skill[ 9] = SCOUT
    set skill[10] = SCOUT

    call SetSkillArray(1,MOON_CHICK)
    call SetSkillArray(2,MOON_BABE)
    call SetSkillArray(3,MOON_HONEY)

    set skill[ 1] = FORCE_NATURE
    set skill[ 2] = ENT_ROOTS
    set skill[ 3] = FORCE_NATURE
    set skill[ 4] = ENT_ROOTS
    set skill[ 5] = FORCE_NATURE
    set skill[ 6] = TRANQUILITY
    set skill[ 7] = ENT_ROOTS
    set skill[ 8] = THORNS_AURA
    set skill[ 9] = THORNS_AURA
    set skill[10] = THORNS_AURA

    call SetSkillArray(1,KEEPER)

    set skill[ 1] = ENT_ROOTS
    set skill[ 2] = THORNS_AURA
    set skill[ 3] = ENT_ROOTS
    set skill[ 4] = THORNS_AURA
    set skill[ 5] = ENT_ROOTS
    set skill[ 6] = TRANQUILITY
    set skill[ 7] = THORNS_AURA
    set skill[ 8] = FORCE_NATURE
    set skill[ 9] = FORCE_NATURE
    set skill[10] = FORCE_NATURE

    call SetSkillArray(2,KEEPER)
    call SetSkillArray(3,KEEPER)

    set skill[ 1] = IMMOLATION
    set skill[ 2] = MANA_BURN
    set skill[ 3] = EVASION
    set skill[ 4] = MANA_BURN
    set skill[ 5] = EVASION
    set skill[ 6] = METAMORPHOSIS
    set skill[ 7] = MANA_BURN
    set skill[ 8] = EVASION
    set skill[ 9] = IMMOLATION
    set skill[10] = IMMOLATION

    call SetSkillArray(1,DEMON_HUNTER)

    set skill[ 1] = MANA_BURN
    set skill[ 2] = EVASION
    set skill[ 3] = MANA_BURN
    set skill[ 4] = EVASION
    set skill[ 5] = MANA_BURN
    set skill[ 6] = METAMORPHOSIS
    set skill[ 7] = EVASION
    set skill[ 8] = IMMOLATION
    set skill[ 9] = IMMOLATION
    set skill[10] = IMMOLATION

    call SetSkillArray(2,DEMON_HUNTER)
    call SetSkillArray(3,DEMON_HUNTER)

    set skill[ 1] = FAN_KNIVES
    set skill[ 2] = SHADOW_TOUCH
    set skill[ 3] = FAN_KNIVES
    set skill[ 4] = BLINK
    set skill[ 5] = FAN_KNIVES
    set skill[ 6] = VENGEANCE
    set skill[ 7] = SHADOW_TOUCH
    set skill[ 8] = BLINK
    set skill[ 9] = SHADOW_TOUCH
    set skill[10] = BLINK

    call SetSkillArray(1,WARDEN)
    call SetSkillArray(2,WARDEN)
    call SetSkillArray(3,WARDEN)
endfunction

//--------------------------------------------------------------------------------------------------
//  setup_force
//--------------------------------------------------------------------------------------------------
function setup_force takes nothing returns nothing
    call AwaitMeleeHeroes()
    call InitMeleeGroup()
    call SetMeleeGroup( hero_id )
    call SetMeleeGroup( hero_id2 )
    call SetMeleeGroup( hero_id3 )
    call SetMeleeGroup( ARCHER )
    call SetMeleeGroup( HUNTRESS )
    call SetMeleeGroup( DRUID_TALON )
    call SetMeleeGroup( DRUID_CLAW )
    call SetMeleeGroup( DRYAD )
    call SetMeleeGroup( CHIMAERA )
    call SetMeleeGroup( MOUNTAIN_GIANT )
    call SetMeleeGroup( FAERIE_DRAGON )
    call SetMeleeGroup( HIPPO )
    call SetMeleeGroup( HIPPO_RIDER )
    call SetInitialWave(10)
endfunction

//--------------------------------------------------------------------------------------------------
//  attack_sequence
//--------------------------------------------------------------------------------------------------
function attack_sequence takes nothing returns nothing
    loop
        exitwhen c_hero1_done > 0
        call Sleep(2)
    endloop
    call StaggerSleep(0,2)
    loop
        loop
            exitwhen not CaptainRetreating()
            call Sleep(2)
        endloop
        call setup_force()
        set max_creeps = level * 4 / 5
        set min_creeps = max_creeps - 10
        if min_creeps < 0 then
            set min_creeps = 0
        endif
        set allow_air_creeps = c_dragon_done + c_hippo_done + c_hippo_rider_done + c_archer_done + c_dryad_done >= 5
        call SingleMeleeAttack(take_exp and level > 20,level > 30,false,c_chimaera_done > 0 or c_dragon_done > 0 or c_hippo_done > 0 or c_hippo_rider_done > 0)
    endloop
endfunction

//--------------------------------------------------------------------------------------------------
//  init_vars
//--------------------------------------------------------------------------------------------------
function init_vars takes nothing returns nothing
    set b_hero1_done        = GetUnitCountDone(hero_id) > 0
    set b_hero2_done        = GetUnitCountDone(hero_id2) > 0
    set b_hero3_done        = GetUnitCountDone(hero_id3) > 0
    set b_rider_done        = GetUpgradeLevel(UPG_HIPPO_TAME) > 0
    set c_altar_done        = GetUnitCountDone(ELF_ALTAR)
    set c_archer            = GetUnitCount(ARCHER)
    set c_archer_done       = GetUnitCountDone(ARCHER)
    set c_ballista          = GetUnitCount(BALLISTA)
    set c_ballista_done     = GetUnitCountDone(BALLISTA)
    set c_bear              = TownCount(DRUID_CLAW)
    set c_bear_done         = TownCountDone(DRUID_CLAW)
    set c_chimaera          = GetUnitCount(CHIMAERA)
    set c_chimaera_done     = GetUnitCountDone(CHIMAERA)
    set c_dragon            = GetUnitCount(FAERIE_DRAGON)
    set c_dragon_done       = GetUnitCountDone(FAERIE_DRAGON)
    set c_dryad             = GetUnitCount(DRYAD)
    set c_dryad_done        = GetUnitCountDone(DRYAD)
    set c_food_made         = c_tree_life * GetFoodMade(TREE_LIFE) + c_moon_well * GetFoodMade(MOON_WELL)
    set c_food_used         = FoodUsed()
    set c_gold              = GetGold()
    set c_hero1             = GetUnitCount(hero_id)
    set c_hero1_done        = GetUnitCountDone(hero_id)
    set c_hero2             = GetUnitCount(hero_id2)
    set c_hero2_done        = GetUnitCountDone(hero_id2)
    set c_hero3             = GetUnitCount(hero_id3)
    set c_hero3_done        = GetUnitCountDone(hero_id3)
    set c_hippo             = GetUnitCount(HIPPO)
    set c_hippo_done        = GetUnitCountDone(HIPPO)
    set c_hippo_rider_done  = GetUnitCountDone(HIPPO_RIDER)
    set c_hunt_hall_done    = GetUnitCountDone(HUNTERS_HALL)
    set c_huntress          = GetUnitCount(HUNTRESS)
    set c_huntress_done     = GetUnitCountDone(HUNTRESS)
    set c_lore_done         = GetUnitCountDone(ANCIENT_LORE)
    set c_moon_well         = GetUnitCount(MOON_WELL)
    set c_moon_well_done    = GetUnitCountDone(MOON_WELL)
    set c_mtn_giant         = GetUnitCount(MOUNTAIN_GIANT)
    set c_mtn_giant_done    = GetUnitCountDone(MOUNTAIN_GIANT)
    set c_roost_done        = GetUnitCountDone(CHIMAERA_ROOST)
    set c_talon             = TownCount(DRUID_TALON)
    set c_talon_done        = TownCountDone(DRUID_TALON)
    set c_tree_ages         = TownCountDone(TREE_AGES)
    set c_tree_ages_done    = TownCountDone(TREE_AGES)
    set c_tree_etern        = TownCount(TREE_ETERNITY)
    set c_tree_etern_done   = TownCountDone(TREE_ETERNITY)
    set c_tree_life         = TownCount(TREE_LIFE)
    set c_tree_life_done    = TownCountDone(TREE_LIFE)
    set c_war_done          = GetUnitCountDone(ANCIENT_WAR)
    set c_wind_done         = GetUnitCountDone(ANCIENT_WIND)
    set c_wisp              = GetUnitCount(WISP)
    set c_wisp_done         = GetUnitCountDone(WISP)
    set c_wonders_done      = GetUnitCountDone(DEN_OF_WONDERS)
    set c_wood              = GetWood()
    set c_zeps              = GetUnitCount(ZEPPELIN)
endfunction

//--------------------------------------------------------------------------------------------------
//  set_vars
//--------------------------------------------------------------------------------------------------
function set_vars takes nothing returns nothing
    loop
        call init_vars()
        call Sleep(1)
    endloop
endfunction

//--------------------------------------------------------------------------------------------------
//  build_sequence
//--------------------------------------------------------------------------------------------------
function food_allowed takes integer qty returns boolean
    return ((c_mines_done > 1 and c_food_used+qty <= 100) or (c_mines_done < 2 and c_food_used+qty < 80)) and c_food_used+qty <= c_tree_life_done * GetFoodMade(TREE_LIFE) + c_moon_well_done * GetFoodMade(MOON_WELL)
endfunction
function build_sequence takes nothing returns nothing
    local integer towns = 1
    local integer worker
    call InitBuildArray()
    set rnd = rnd + 1
    if rnd > 3 then
        set rnd = 1
    endif
    set level = 4*c_hero1_done + 5*(c_hero2_done + c_hero3_done) + 2*(c_ballista_done + c_archer_done + c_hippo_done + c_talon_done) + 3*(c_huntress_done + c_dryad_done + c_dragon_done) + 4*(c_bear_done + c_hippo_rider_done) + 5*c_chimaera_done + 6*c_mtn_giant_done
    set worker = c_mines_done * 5 + 8
    if worker < 3 then
        set worker = 3
    endif
    call BasicExpansion( c_mines < 1 and c_wisp_done > 0, TREE_LIFE )
    if c_wisp == c_wisp_done and c_wisp_done < worker and GetUnitCountDone(TREE_LIFE) + GetUnitCountDone(TREE_AGES) + GetUnitCountDone(TREE_ETERNITY) > 0 and food_allowed(1) then
        call SetBuildUnit( c_wisp_done+1, WISP )
    endif
    if c_food_used + 5 >= c_food_made and c_food_made < 100 then
        call SetBuildUnit( c_moon_well_done+1, MOON_WELL )
    endif
    if c_tree_life < 1 and c_wisp_done > 0 then
        call SetBuildUnit( 1, TREE_LIFE )
    endif
    if c_altar_done < 1 then
        call SetBuildUnit( 1, ELF_ALTAR )
    elseif c_hero1 == c_hero1_done and c_hero2 == c_hero2_done and c_hero3 == c_hero3_done and food_allowed(5) then
        if b_hero1_done then
            if b_hero2_done then
                if b_hero3_done or c_tree_etern_done > 0 then
                    call SetBuildUnit( 1, hero_id3 )
                endif
            elseif c_tree_ages_done > 0 then
                call SetBuildUnit( 1, hero_id2 )
            endif
        else
            call SetBuildUnit( 1, hero_id )
        endif
    endif
    if b_rider_done and c_archer_done > 0 and c_hippo_done > 0 then
        call MergeUnits(c_hippo_rider_done+1,ARCHER,HIPPO,HIPPO_RIDER)
    endif
    if c_war_done < 1 then
        call SetBuildUnit( 1, ANCIENT_WAR )
    elseif c_archer == c_archer_done and c_huntress == c_huntress_done then
        if c_lore_done < 1 and (c_hunt_hall_done < 1 or rnd == 1) then
            if c_tree_ages_done > 0 and c_archer_done > 3 and GetUpgradeLevel(UPG_BOWS) < 1 then
                call SetBuildUpgr( 1, UPG_BOWS )
            elseif c_tree_etern_done > 0 and c_hunt_hall_done > 0 and c_archer_done > 3 and GetUpgradeLevel(UPG_MARKSMAN) < 1 then
                call SetBuildUpgr( 1, UPG_MARKSMAN )
            elseif c_archer_done < 6 and food_allowed(2) then
                call SetBuildUnit( c_archer_done+1, ARCHER )
            endif
        elseif c_hunt_hall_done > 0 then
            if c_tree_etern_done > 0 and c_huntress_done > 2 and GetUpgradeLevel(UPG_GLAIVE) < 1 then
                call SetBuildUpgr( 1, UPG_GLAIVE )
            elseif c_huntress_done < 4 and food_allowed(3) then
                call SetBuildUnit( c_huntress_done+1, HUNTRESS )
            endif
        endif
    endif
    if c_wonders_done < 1 then
        call SetBuildUnit( 1, DEN_OF_WONDERS )
    endif
    if c_hunt_hall_done < 1 then
        call SetBuildUnit( 1, HUNTERS_HALL )
    endif
    if GetUnitCountDone(TREE_LIFE) > 0 and TownCount(TREE_AGES) < 1 and worker <= c_wisp_done then
        call SetBuildUnit( 1, TREE_AGES )
    endif
    call BasicExpansion( c_mines < 2, TREE_LIFE )
    if c_mines > 1 and c_gold > 300 then
        loop
            exitwhen towns > 3
            if GetTownUnitCount(TREE_LIFE,towns,false) > 0 then
                if TownCountTown(ANCIENT_PROTECT,towns) < 2 then
                    call SecondaryTown( towns, 2, ANCIENT_PROTECT )
                endif
            endif
            set towns = towns + 1
        endloop
    elseif c_mines < 1 and c_gold < 800 then
        return
    endif
    if c_tree_etern_done > 0 then
        call SetBuildUpgr( 1, UPG_WELL_SPRING )
    endif
    if c_gold > 300 and c_wood > 200 then
        call SetBuildUpgr( 1, UPG_STR_MOON )
        call SetBuildUpgr( 1, UPG_MOON_ARMOR )
        call SetBuildUpgr( 1, UPG_STR_WILD )
        call SetBuildUpgr( 1, UPG_HIDES )
        if c_tree_ages_done > 0 then
            call SetBuildUpgr( 2, UPG_STR_MOON )
            call SetBuildUpgr( 2, UPG_MOON_ARMOR )
            call SetBuildUpgr( 2, UPG_STR_WILD )
            call SetBuildUpgr( 2, UPG_HIDES )
            if c_tree_etern_done > 0 and c_gold > 400 and c_wood > 300 then
                call SetBuildUpgr( 3, UPG_STR_MOON )
                call SetBuildUpgr( 3, UPG_MOON_ARMOR )
                call SetBuildUpgr( 3, UPG_STR_WILD )
                call SetBuildUpgr( 3, UPG_HIDES )
            endif
        endif
    endif
    if GetUnitCountDone(TREE_AGES) > 0 and GetUnitCount(TREE_ETERNITY) < 1 and worker <= c_wisp_done and c_bear + c_dryad + c_mtn_giant + c_talon + c_dragon + c_hippo > 5 and level > 30 then
        call SetBuildUnit( 1, TREE_ETERNITY )
    endif
    if c_lore_done < 1 then
        call SetBuildUnit( 1, ANCIENT_LORE )
    elseif c_bear == c_bear_done and c_dryad == c_dryad_done and c_mtn_giant == c_mtn_giant_done then
        if rnd == 1 then
            if c_bear_done > 0 and GetUpgradeLevel(UPG_DRUID_CLAW) < 1 then
                call SetBuildUpgr( 1, UPG_DRUID_CLAW )
            elseif c_tree_etern_done > 0 and c_bear_done > 0 and (GetUpgradeLevel(UPG_DRUID_CLAW) < 2 or GetUpgradeLevel(UPG_MARK_CLAW) < 1) then
                call SetBuildUpgr( 2, UPG_DRUID_CLAW )
                call SetBuildUpgr( 1, UPG_MARK_CLAW )
            elseif c_bear_done < 3 and food_allowed(4) then
                call SetBuildUnit( c_bear_done+1, DRUID_CLAW )
            endif
        elseif rnd == 2 then
            if c_dryad_done > 0 and GetUpgradeLevel(UPG_ABOLISH) < 1 then
                call SetBuildUpgr( 1, UPG_ABOLISH )
            elseif c_dryad_done < 4 and food_allowed(3) then
                call SetBuildUnit( c_dryad_done+1, DRYAD )
            endif
        elseif c_wonders_done > 0 then
            if c_tree_etern_done > 0 and c_mtn_giant_done > 0 and (GetUpgradeLevel(UPG_HARD_SKIN) < 1 or GetUpgradeLevel(UPG_RESIST_SKIN) < 1) then
                call SetBuildUpgr( 1, UPG_HARD_SKIN )
                call SetBuildUpgr( 1, UPG_RESIST_SKIN )
            elseif c_mtn_giant_done < 2 and food_allowed(7) then
                call SetBuildUnit( c_mtn_giant_done+1, MOUNTAIN_GIANT )
            endif
        endif
    endif
    if c_wind_done < 1 then
        call SetBuildUnit( 1, ANCIENT_WIND )
    elseif c_hippo == c_hippo_done and c_talon == c_talon_done and c_dragon == c_dragon_done then
        if rnd == 1 then
            if c_archer_done > 2 and c_hippo_done > 0 and GetUpgradeLevel(UPG_HIPPO_TAME) < 1 then
                call SetBuildUpgr( 1, UPG_HIPPO_TAME )
            elseif (c_hippo_done + c_hippo_rider_done < 2 or (b_rider_done and c_archer_done > 0 and c_hippo_rider_done < 3)) and food_allowed(2) then
                call SetBuildUnit( c_hippo_done+1, HIPPO )
            endif
        elseif rnd == 2 then
            if c_talon_done > 0 and GetUpgradeLevel(UPG_DRUID_TALON) < 1 then
                call SetBuildUpgr( 1, UPG_DRUID_TALON )
            elseif c_tree_etern_done > 0 and c_talon_done > 0 and (GetUpgradeLevel(UPG_DRUID_TALON) < 2 or GetUpgradeLevel(UPG_MARK_TALON) < 1) then
                call SetBuildUpgr( 2, UPG_DRUID_TALON )
                call SetBuildUpgr( 1, UPG_MARK_TALON )
            elseif c_talon_done < 3 and food_allowed(2) then
                call SetBuildUnit( c_talon_done+1, DRUID_TALON )
            endif
        elseif c_wonders_done > 0 and c_dragon_done < 2 and food_allowed(2) then
            call SetBuildUnit( c_dragon_done+1, FAERIE_DRAGON )
        endif
    endif
    if c_roost_done < 1 then
        if c_tree_etern_done > 0 then
            call SetBuildUnit( 1, CHIMAERA_ROOST )
        endif
    elseif c_chimaera == c_chimaera_done then
        if c_chimaera_done > 0 and GetUpgradeLevel(UPG_CHIM_ACID) < 1 then
            call SetBuildUpgr( 1, UPG_CHIM_ACID )
        elseif c_chimaera_done < 2 and food_allowed(5) then
            call SetBuildUnit( c_chimaera_done+1, CHIMAERA )
        endif
    endif
    if c_zeps < 1 then
        call GetZeppelin()
    endif
endfunction

//--------------------------------------------------------------------------------------------------
//  peon_assignment
//--------------------------------------------------------------------------------------------------
function peon_assignment takes nothing returns nothing
    local integer townid = 0
    call build_sequence()
    call Sleep(1.5)
    loop
        call ClearHarvestAI()
        set c_mines = 0
        set c_mines_done = 0
        loop
            exitwhen townid > 3
            if TownHasMine(townid) then
                if GetTownUnitCount(ELF_MINE,townid,true) > 0 then
                    call HarvestGold(townid,5)
                    set c_mines_done = c_mines_done + 1
                elseif GetTownUnitCount(TREE_LIFE,townid,false) > 0 then
                    set c_mines = c_mines + 1
                endif
            endif
            set townid = townid + 1
        endloop
        set c_mines = c_mines + c_mines_done
        set townid = 0
        call HarvestWood(0, c_wisp_done - c_mines_done * 5)
        call build_sequence()
        call Sleep(1)
    endloop
endfunction

//--------------------------------------------------------------------------------------------------
//    main
//--------------------------------------------------------------------------------------------------
function main takes nothing returns nothing
    call PickMeleeHero(RACE_NIGHTELF)
    call set_skills()
    call StandardAI(function SkillArrays, function peon_assignment, function attack_sequence)
    call StartThread(function set_vars)
    call PlayGame()
endfunction
